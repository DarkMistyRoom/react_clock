{"version":3,"sources":["Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","log","toLocaleTimeString","prevProps","clockName","props","clearInterval","dateStr","className","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAWaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAE1BM,QAAQC,IAAI,EAAKT,MAAMC,KAAKS,wBAC3B,OAZP,gCAeE,SAAmBC,GACjB,IAAQC,EAAcR,KAAKS,MAAnBD,UAEJD,EAAUC,YAAcA,GAC1BJ,QAAQC,IAAR,uBAA4BE,EAAUC,UAAtC,eAAsDA,MAnB5D,kCAuBE,WACEP,OAAOS,cAAcV,KAAKD,WAxB9B,oBA2BE,WACE,IAAMY,EAAUX,KAAKJ,MAAMC,KAAKS,qBACxBE,EAAcR,KAAKS,MAAnBD,UAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGD,WAxCX,GAA2BE,aCN3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACExB,MAAyB,CACvByB,UAAU,EACVb,UAAWM,KAHf,uDAME,WAAqB,IAAD,OAClBQ,SAASC,iBAAiB,eAAe,kBAAM,EAAKpB,SAClD,CAAEkB,UAAU,OAGdC,SAASC,iBAAiB,SAAS,kBAAM,EAAKpB,SAC5C,CAAEkB,UAAU,OAGdpB,OAAOC,aACL,kBAAM,EAAKC,SAAS,CAAEK,UAAWM,QAAoB,QAhB3D,oBAoBE,WACE,MAAgCd,KAAKJ,MAA7ByB,EAAR,EAAQA,SAAUb,EAAlB,EAAkBA,UAElB,OACE,sBAAKI,UAAU,MAAf,UACE,6CAECS,GAAY,cAAC,EAAD,CAAOb,UAAWA,WA3BvC,GAAyBK,aCbzBW,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.544e6aa4.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype State = {\n  date: Date;\n};\n\ntype Props = {\n  clockName: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { clockName } = this.props;\n\n    if (prevProps.clockName !== clockName) {\n      console.log(`Renamed from ${prevProps.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const dateStr = this.state.date.toLocaleTimeString();\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {dateStr}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\n\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', () => this.setState(\n      { hasClock: false },\n    ));\n\n    document.addEventListener('click', () => this.setState(\n      { hasClock: true },\n    ));\n\n    window.setInterval(\n      () => this.setState({ clockName: getRandomName() }), 3300,\n    );\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}